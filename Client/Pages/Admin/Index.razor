@page "/admin"
@inject HttpClient Http
@using Blazored.LocalStorage
@using Client.Components.Public.Warp
@using Client.Components.Admin
@using Client.Providers
@using Client.Services
@using System.Net.Http.Headers
@using global::Shared.Models

 


		<!DOCTYPE html>
<html>


    <AuthorizeView Roles="Administrator">
	<Authorized Context="Auth">
          <Nav></Nav>


  <body>
   
      <!-- partial:partials/_navbar.html -->
      <div>
      <!-- partial -->
      <div class="container-fluid page-body-wrapper">
        <!-- partial:partials/_sidebar.html -->
        <nav class="sidebar sidebar-offcanvas" id="sidebar">
          <ul class="nav">
            <li class="nav-item nav-profile">
              <a href="#" class="nav-link">
                <div class="nav-profile-image">
                  <!--<img src="" alt="profile">-->
                  <span class="login-status online"></span>
                  <!--change to offline or busy as needed-->
                </div>
                <div class="nav-profile-text d-flex flex-column">
                  <span class="font-weight-bold mb-2">Admin</span>
                 
                </div>
                <i class="mdi mdi-bookmark-check text-success nav-profile-badge"></i>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/admin">
                <span class="menu-title">Home</span>
                <i class="mdi mdi-home menu-icon"></i>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/admin/cars">
                <span class="menu-title">Cars</span>
                <i class="menu-arrow"></i>
                <i class="mdi mdi-car-connected menu-icon"></i>
              </a>      
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/admin/booking">
                <span class="menu-title">Bookings</span>
                <i class="mdi mdi-contacts menu-icon"></i>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/admin/users">
                <span class="menu-title">Users</span>
                <i class="mdi mdi-format-list-bulleted menu-icon"></i>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="pages/charts/chartjs.html">
                <span class="menu-title">Charts</span>
                <i class="mdi mdi-chart-bar menu-icon"></i>
              </a>
            </li>
 
         
          </ul>
        </nav>
        <!-- partial -->
        <div class="main-panel">
          <div class="content-wrapper">
            <div class="page-header">
              <h3 class="page-title">
                <span class="page-title-icon bg-gradient-primary text-white me-2">
                  <i class="mdi mdi-home"></i>
                </span> Home
              </h3>
              <nav aria-label="breadcrumb">
                <ul class="breadcrumb">
                  <li class="breadcrumb-item active" aria-current="page">
                    <span></span>Overview @temp1<i class="mdi mdi-alert-circle-outline icon-sm text-primary align-middle"></i>
                  </li>
                </ul>
              </nav>
            </div>
            <div class="row">
              <div class="col-md-4 stretch-card grid-margin">
                <div class="card bg-gradient-danger card-img-holder text-white">
                  <div class="card-body">
                    <img src="assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                    <h4 class="font-weight-normal mb-3">Bookings <i class="mdi mdi-receipt mdi-24px float-right"></i>
                    </h4>
                    <h2 class="mb-5">Total Bookings: @temp2</h2>
                    <h6 class="card-text">Increased by 60%</h6>
                  </div>
                </div>
              </div>
              <div class="col-md-4 stretch-card grid-margin">
                <div class="card bg-gradient-info card-img-holder text-white">
                  <div class="card-body">
                    <img src="assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                    <h4 class="font-weight-normal mb-3">Users <i class="mdi mdi-human mdi-24px float-right"></i>
                    </h4>
                    <h2 class="mb-5">Total Users: @temp3</h2>
                    <h6 class="card-text">Decreased by 10%</h6>
                  </div>
                </div>
              </div>
              <div class="col-md-4 stretch-card grid-margin">
                <div class="card bg-gradient-success card-img-holder text-white">
                  <div class="card-body">
                    <img src="assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                    <h4 class="font-weight-normal mb-3">Our Fleet <i class="mdi mdi-car-connected mdi-24px float-right"></i>
                    </h4>
                    <h2 class="mb-5">Number of Cars: @temp1</h2>
                    <h6 class="card-text">Increased by 5%</h6>
                  </div>
                </div>
              </div>
            </div>
       
  
          </div>
          <!-- content-wrapper ends -->
          <!-- partial:partials/_footer.html -->
          <footer class="footer">
            <div class="container-fluid d-flex justify-content-between">
              
            </div>
          </footer>
          <!-- partial -->
        </div>
        <!-- main-panel ends -->
      </div>
      <!-- page-body-wrapper ends -->
    </div>
  </body>


  	</Authorized>

</AuthorizeView>

	<NotAuthorized>
		<SignIn />
	</NotAuthorized>

</html>


@code
{
    [Inject] InMemoryDatabaseCache ?InMemoryDatabaseCache { get; set; }
    [Inject] HttpClient ?HttpClient { get; set; }
    [Inject] AuthenticationStateProvider? AuthenticationStateProvider { get; set; }
    [Inject] ILocalStorageService ?LocalStorageService { get; set; }
    [Inject] NavigationManager ?NavigationManager { get; set; }


    int ?temp1;
    int ?temp2;
    int ?temp3;

    protected override async Task OnInitializedAsync()
    {
        if (await LocalStorageService.ContainKeyAsync("bearerToken"))
        {
            string savedToken = await LocalStorageService.GetItemAsync<string>("bearerToken");

            await ((AppAuthenticationStateProvider)AuthenticationStateProvider).SignIn();

            HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", savedToken);

            StateHasChanged();
        }

        if (InMemoryDatabaseCache.Cars == null)
        {
            await InMemoryDatabaseCache.GetCarsFromDatabaseAndCache();

            temp1 = InMemoryDatabaseCache.Cars.Count;



        }

        if (InMemoryDatabaseCache.Users == null)
        {
            await InMemoryDatabaseCache.GetUsersFromDatabaseAndCache();

            temp3 = InMemoryDatabaseCache.Users.Count;

        }
        if (InMemoryDatabaseCache.Cars == null)
        {

            temp1 = InMemoryDatabaseCache.Cars.Count;

        }
        if (InMemoryDatabaseCache.Bookings == null)
        {
            try
            {
                await InMemoryDatabaseCache.GetBookingsFromDatabaseAndCache();
                temp2 = InMemoryDatabaseCache.Bookings.Count;
            }
            catch{

                Console.WriteLine("Error loading");
            }
          

        }
    

    }
   


  

    
}