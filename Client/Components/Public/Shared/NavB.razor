@using Blazored.LocalStorage
@using System.Net.Http.Headers
@using Client.Providers







<header>
  
<nav class="navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row">
    <div class="text-center navbar-brand-wrapper d-flex align-items-center justify-content-center">
        <a class="navbar-brand brand-logo @(IsPageActive(FleetPageUri) ? "active" : string.Empty)" href="@HomePageUri"><img src="assets/images/WarpLogo.svg.svg" alt="logo" /></a>

    </div>
         
           
    <div class="navbar-menu-wrapper d-flex align-items-stretch float-left">
         <ul class="navbar-nav navbar-nav-left">
        <li class="nav-item nav-logout d-none d-lg-block">
                    <a href="@FleetPageUri" class="nav-link @(IsPageActive(FleetPageUri) ? "active" : string.Empty)" >
                        <i class="mdi mdi-cached me-2 text-success"></i> Fleet
                    </a>
                </li>
         <li class="nav-item nav-logout d-none d-lg-block">
            <a href="@ContactPageUri" class="nav-link @(IsPageActive(ContactPageUri) ? "active" : string.Empty)">
               <i class="mdi mdi-cached me-2 text-success"></i> Contact
            </a>
        </li>
        <li class="nav-item nav-logout d-none d-lg-block">
              <a href="@AboutPageUri" class="nav-link @(IsPageActive(AboutPageUri) ? "active" : string.Empty)">
               <i class="mdi mdi-cached me-2 text-success"></i> About
            </a>
        </li>

         <li class="nav-item nav-logout d-none d-lg-block">
             <a href="@RegisterPageUri" class="nav-link @(IsPageActive(RegisterPageUri) ? "active" : string.Empty)">
               <i class="mdi mdi-cached me-2 text-success"></i> Register
            </a>
        </li>
        </ul>
        <div class="search-field d-none d-md-block">
            <form class="d-flex align-items-center h-100" action="#">
                <div class="input-group">
                    <div class="input-group-prepend bg-transparent">
                        <i class="input-group-text border-0 mdi mdi-magnify"></i>
                    </div>
                    <input type="text" class="form-control bg-transparent border-0" placeholder="Search projects">
                </div>
            </form>
        </div>
        <ul class="navbar-nav navbar-nav-right">
            <AuthorizeView>
              
                <li class="nav-item nav-profile dropdown">
                    <a class="nav-link " id="profileDropdown" href="/profile" data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="nav-profile-img">
                            <img src="assets/images/faces/face1.jpg" alt="image">
                            <span class="availability-status online"></span>
                        </div>
          
                    </a>
                 @*   <div class="dropdown-menu navbar-dropdown" aria-labelledby="profileDropdown">
                        <a class="dropdown-item" href="/profile">
                            <i class="mdi mdi-cached me-2 text-success"></i> My Account
                        </a>
                        </div>*@
                   
                </li>
                   <li class="nav-item nav-logout d-none d-lg-block">
                    <a class="nav-link" href="/profile">
                        <i class="mdi mdi-cached me-2 text-success"></i> @UserName
                    </a>
                </li>
            </AuthorizeView>
            <AuthorizeView Context="context">

                <li class="nav-item nav-logout d-none d-lg-block">
                    <a class="nav-link" type="button" onclick="@SignOut">
                        <i class="mdi mdi-cached me-2 text-success"></i> Sign Out
                    </a>
                </li>
            </AuthorizeView>
            @if (_isSignedOut == true)
            {
                <li class="nav-item nav-logout d-none d-lg-block">
                    <a class="nav-link" href="/signin">
                        <i class="mdi mdi-cached me-2 text-success"></i> Sign In
                    </a>
                </li>
                <li class="nav-item nav-settings d-none d-lg-block">
                    <a class="nav-link" href="#">
                        <i class="mdi mdi-format-line-spacing"></i>
                    </a>
                </li>
            }
        </ul>
        <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center" type="button" data-toggle="offcanvas">
            <span class="mdi mdi-menu"></span>
        </button>
    </div>
</nav>
</header>
@code
{


    [Inject] HttpClient HttpClient { get; set; }
    [Inject] AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    [Inject] ILocalStorageService LocalStorageService { get; set; }
    [Inject] public NavigationManager NavigationManager { get; set; }
    [CascadingParameter] protected Task<AuthenticationState> AuthenticationState { get; set; } 

    string UserName{ get;set; }

    bool _isSignedOut;

    protected override async Task OnInitializedAsync()
    {

        if (await LocalStorageService.ContainKeyAsync("bearerToken"))
        {
            _isSignedOut = false;
            var user = (await AuthenticationState).User;

            UserName = user.Identity.Name;
        }

        else
        {

            _isSignedOut = true;
        }

    }
    private async Task SignOut()
    {
        if (await LocalStorageService.ContainKeyAsync("bearerToken"))
        {
            await LocalStorageService.RemoveItemAsync("bearerToken");

            ((AppAuthenticationStateProvider)AuthenticationStateProvider).SignOut();

            _isSignedOut = true;
        }

        StateHasChanged();
        NavigationManager.NavigateTo("/");
    }

    

    private const string HomePageUri = "/";
    private const string FleetPageUri = "/fleet";
    private const string RegisterPageUri = "/register1";
    private const string AboutPageUri = "/about";
    private const string ContactPageUri = "/contact";

    private bool IsPageActive(string pageToCheckUri)
    {
        // Skip(3) to remove https://domainname/
        string[] currentUriSplitBetweenSlashes = NavigationManager.Uri.Split('/').Skip(3).ToArray();

        if (pageToCheckUri == HomePageUri)
        {
            if (currentUriSplitBetweenSlashes.Last().Length == 0)
            {
                return true;
            }
        }
        else
        {
            string[] pageToCheckUriSplitBetweenSlashes = pageToCheckUri.Split('/').Skip(1).ToArray();

            foreach (string currentUriPart in currentUriSplitBetweenSlashes)
            {
                foreach (string pageToCheckUriPart in pageToCheckUriSplitBetweenSlashes)
                {
                    if (pageToCheckUriPart == currentUriPart)
                    {
                        return true;
                    }
                }
            }
        }

        // If the code gets here pageToCheckUri is not the active page. So return false.
        return false;
    }


}